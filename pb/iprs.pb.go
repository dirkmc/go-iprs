// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iprs.proto

/*
Package recordstore_pb is a generated protocol buffer package.

It is generated from these files:
	iprs.proto

It has these top-level messages:
	IprsEntry
*/
package recordstore_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IprsEntry_ValidityType int32

const (
	// setting an EOL says "this record is valid until..."
	IprsEntry_EOL IprsEntry_ValidityType = 0
	// setting a time range says "this record is valid between x and y"
	IprsEntry_TimeRange IprsEntry_ValidityType = 1
)

var IprsEntry_ValidityType_name = map[int32]string{
	0: "EOL",
	1: "TimeRange",
}
var IprsEntry_ValidityType_value = map[string]int32{
	"EOL":       0,
	"TimeRange": 1,
}

func (x IprsEntry_ValidityType) Enum() *IprsEntry_ValidityType {
	p := new(IprsEntry_ValidityType)
	*p = x
	return p
}
func (x IprsEntry_ValidityType) String() string {
	return proto.EnumName(IprsEntry_ValidityType_name, int32(x))
}
func (x *IprsEntry_ValidityType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(IprsEntry_ValidityType_value, data, "IprsEntry_ValidityType")
	if err != nil {
		return err
	}
	*x = IprsEntry_ValidityType(value)
	return nil
}
func (IprsEntry_ValidityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type IprsEntry struct {
	Value            []byte                  `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
	Signature        []byte                  `protobuf:"bytes,2,req,name=signature" json:"signature,omitempty"`
	ValidityType     *IprsEntry_ValidityType `protobuf:"varint,3,opt,name=validityType,enum=recordstore.pb.IprsEntry_ValidityType" json:"validityType,omitempty"`
	Validity         []byte                  `protobuf:"bytes,4,opt,name=validity" json:"validity,omitempty"`
	Sequence         *uint64                 `protobuf:"varint,5,opt,name=sequence" json:"sequence,omitempty"`
	Ttl              *uint64                 `protobuf:"varint,6,opt,name=ttl" json:"ttl,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *IprsEntry) Reset()                    { *m = IprsEntry{} }
func (m *IprsEntry) String() string            { return proto.CompactTextString(m) }
func (*IprsEntry) ProtoMessage()               {}
func (*IprsEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *IprsEntry) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *IprsEntry) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *IprsEntry) GetValidityType() IprsEntry_ValidityType {
	if m != nil && m.ValidityType != nil {
		return *m.ValidityType
	}
	return IprsEntry_EOL
}

func (m *IprsEntry) GetValidity() []byte {
	if m != nil {
		return m.Validity
	}
	return nil
}

func (m *IprsEntry) GetSequence() uint64 {
	if m != nil && m.Sequence != nil {
		return *m.Sequence
	}
	return 0
}

func (m *IprsEntry) GetTtl() uint64 {
	if m != nil && m.Ttl != nil {
		return *m.Ttl
	}
	return 0
}

func init() {
	proto.RegisterType((*IprsEntry)(nil), "recordstore.pb.IprsEntry")
	proto.RegisterEnum("recordstore.pb.IprsEntry_ValidityType", IprsEntry_ValidityType_name, IprsEntry_ValidityType_value)
}

func init() { proto.RegisterFile("iprs.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8d, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x4d, 0xb7, 0x55, 0x77, 0x58, 0xcb, 0x32, 0x78, 0x08, 0xe2, 0x21, 0xf4, 0x50, 0x72,
	0xca, 0xc1, 0xff, 0xd0, 0x83, 0x22, 0x08, 0xa1, 0x78, 0x8f, 0xed, 0x50, 0x02, 0x6b, 0x12, 0x27,
	0xd9, 0xc2, 0xfe, 0x78, 0x41, 0x5a, 0x71, 0xed, 0xde, 0xe6, 0x7b, 0x6f, 0x1e, 0x1f, 0x80, 0x4f,
	0x9c, 0x4d, 0xe2, 0x58, 0x22, 0x2e, 0x99, 0x76, 0x91, 0xf7, 0xb9, 0x44, 0x26, 0x93, 0x3e, 0x56,
	0xdf, 0x02, 0xea, 0xe7, 0xc4, 0x79, 0x13, 0x0a, 0x0f, 0x78, 0x0f, 0x8b, 0xa3, 0xeb, 0x7a, 0x92,
	0x42, 0xcd, 0x74, 0x63, 0x7f, 0x01, 0x1f, 0xa1, 0xce, 0xfe, 0x10, 0x5c, 0xe9, 0x99, 0xe4, 0xec,
	0xdc, 0xfc, 0x07, 0xf8, 0x02, 0xcd, 0xd1, 0x75, 0x7e, 0xef, 0xcb, 0xb0, 0x1d, 0x12, 0xc9, 0x4a,
	0x09, 0xbd, 0x7c, 0x5a, 0x9b, 0xa9, 0xc8, 0x8c, 0x12, 0xf3, 0x7e, 0xf1, 0x6d, 0x27, 0x5b, 0x7c,
	0x80, 0xdb, 0x3f, 0x96, 0x73, 0x25, 0x74, 0x63, 0x47, 0x3e, 0x75, 0x99, 0xbe, 0x7a, 0x0a, 0x3b,
	0x92, 0x0b, 0x25, 0xf4, 0xdc, 0x8e, 0x8c, 0x2d, 0x54, 0xa5, 0x74, 0xf2, 0xfa, 0x1c, 0x9f, 0xce,
	0xd5, 0x1a, 0x9a, 0x4b, 0x0f, 0xde, 0x40, 0xb5, 0x79, 0x7b, 0x6d, 0xaf, 0xf0, 0x0e, 0xea, 0xad,
	0xff, 0x24, 0xeb, 0xc2, 0x81, 0x5a, 0xf1, 0x13, 0x00, 0x00, 0xff, 0xff, 0x59, 0x46, 0xf3, 0x87,
	0x1c, 0x01, 0x00, 0x00,
}
